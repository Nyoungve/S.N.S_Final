--테이블 생성

--1. 고객 테이블
drop table customer cascade constraint;

create table customer(
USERID varchar2(20) not null
,NAME varchar2(20) not null
,PASSWORD varchar2(20) not null
,MOBILE varchar2(20) not null
,EMAIL varchar2(100) not null
,NOSHOWCOUNT number default 0
,constraint PK_tbl_customer_userid primary key(userid) 
);




--고객 더미 데이터
--1.customer--
insert into customer values('a','김동규','1','010-3333-3333','ad@naver.com','0');
insert into customer values('b','최빛찬','1','010-3333-3332','ad2@naver.com','0');
insert into customer values('c','김나영','1','010-3333-3333','ad3@naver.com','0');
insert into customer values('d','이희성','1','010-3333-3334','ad4@naver.com','0');
insert into customer values('e','이수진','1','010-3333-3334','ad4@naver.com','0');
insert into customer values('f','조두현','1','010-3333-3334','ad4@naver.com','0');
insert into customer values('g','김태경','1','010-3333-3334','ad4@naver.com','0');
insert into customer values('h','최태휘','1','010-3333-3334','ad4@naver.com','0');
insert into customer values('i','한규필','1','010-3333-3334','ad4@naver.com','0');
insert into customer values('j','강수미','1','010-3333-3334','ad4@naver.com','0');

commit;


--2.레스토랑 테이블

drop table RESTAURANT cascade constraint;


create table RESTAURANT(
RESTAURANT_NUMBER varchar2(20)
, E_NAME VARCHAR(20)
, ADDRESS VARCHAR(200)
, TEAMCOUNT number
, TYPE VARCHAR(20)
, PAY_KEY VARCHAR(20)
, R_info VARCHAR2(3000)
, R_time varchar2(300)
, openingTime number not null
, closingTime number not null
,zipcode varchar2(20)
,constraint UK_tbl_restaurant_pay_key unique(pay_key)
,constraint pK_tbl_r_RESTAURANT_NUMBER primary key(RESTAURANT_NUMBER)
);



--2.레스토랑 더미 데이터
insert into restaurant values('0101','totai','서울 강남','5','양식','paykey1','최고급 식당','11시부터 저녁 9시','11','22','06266');
insert into restaurant values('0202','outback','서울 종로','4','중식','paykey2','고급 식당','11시부터 저녁 10시','11','22','06242');
insert into restaurant values('0303','chicken','서울 강북','3','일식','paykey3','고고급 식당','11시부터 저녁 8시','11','22','06232');
insert into restaurant values('0404','totai','서울 성남','2','한식','paykey4','고오급 식당','10시부터 저녁 9시','11','22','06241');
commit;



--3. 업주 테이블
drop table owner cascade constraint;

create table owner(
RESTAURANT_NUMBER varchar2(20) not null
,USERID varchar2(20) not null
,NAME varchar2(20) not null
,password varchar2(20) not null
,mobile varchar2(20) 
,email varchar2(30)
,constraint UK_tbl_e_RESTAURANT_NUMBER unique(RESTAURANT_NUMBER)
,constraint FK_tbl_owner_restaurant_number foreign key(RESTAURANT_NUMBER)
references restaurant(RESTAURANT_NUMBER) on delete cascade
,constraint FK_tbl_userid foreign key(userid) 
references customer(userid) on delete cascade
);

--3. 업주 더미 데이터
insert into owner values('0101','a','김동규','1','010-1111-1111','ea@naver,com');
insert into owner values('0202','b','최빛찬','2','010-1111-1112','ea2@naver,com');
insert into owner values('0303','c','김나영','3','010-1111-1113','ea3@naver,com');
insert into owner values('0404','d','이희성','4','010-1111-1114','ea4@naver,com');
commit;



----4. 예약정보테이블              RESERVE
drop table reserve cascade constraint;

create table reserve(
  restaurant_number varchar2(20) not null
  ,reserve_date date
  ,userid varchar2(20)
  ,deposit varchar2(20)
  ,r_state number
  ,guestCount number
  ,reserveNumber number
  ,reviewCheck number default 0
  ,constraint fk_tbl_rv_restaurant_number foreign key(restaurant_number)
  references  restaurant(restaurant_number) on delete cascade
  ,constraint fk_tbl_rv_userid foreign key(userid)
  references  customer(userid) on delete cascade
  ,constraint PK_tbl_rv_reserveNumber primary key(reserveNumber)
);

--예약 정보 테이블 시퀀스

drop sequence seq_reserveNumber;
create sequence seq_reserveNumber;


--4. 예약정보 테이블 더미 데이터

--ㄱ)번째 컬럼 값의 의미
--1) 승인대기
--2) 예약완료
--3) 취소요청
--4) 취소완료
--5) 이용완료
--6) 노쇼

delete from reserve;

insert into reserve values('0101',to_date('2017-04-20 18:00:00', 'yyyy-mm-dd hh24:mi:ss'),'a','30000','5', '3', seq_reserveNumber.nextval, '0');


insert into reserve values('0101',to_date('2017-04-22 18:00:00', 'yyyy-mm-dd hh24:mi:ss'),'a','30000','5', '3', seq_reserveNumber.nextval, '0');
insert into reserve values('0101',to_date('2017-04-22 18:00:00', 'yyyy-mm-dd hh24:mi:ss'),'a','30000','4', '3', seq_reserveNumber.nextval, '0');
insert into reserve values('0101',to_date('2017-04-22 18:00:00', 'yyyy-mm-dd hh24:mi:ss'),'a','30000','3', '3', seq_reserveNumber.nextval, '0');
insert into reserve values('0101',to_date('2017-04-22 18:00:00', 'yyyy-mm-dd hh24:mi:ss'),'a','30000','2', '3', seq_reserveNumber.nextval, '0');
insert into reserve values('0101',to_date('2017-04-22 18:00:00', 'yyyy-mm-dd hh24:mi:ss'),'a','30000','1', '3', seq_reserveNumber.nextval, '0');

insert into reserve values('0101',to_date('2017-04-21 18:00:00', 'yyyy-mm-dd hh24:mi:ss'),'a','30000','5', '3', seq_reserveNumber.nextval, '1');
insert into reserve values('0101',to_date('2017-04-21 18:00:00', 'yyyy-mm-dd hh24:mi:ss'),'a','30000','4', '3', seq_reserveNumber.nextval, '0');
insert into reserve values('0101',to_date('2017-04-21 18:00:00', 'yyyy-mm-dd hh24:mi:ss'),'a','30000','3', '3', seq_reserveNumber.nextval, '0');
insert into reserve values('0101',to_date('2017-04-21 18:00:00', 'yyyy-mm-dd hh24:mi:ss'),'a','30000','2', '3', seq_reserveNumber.nextval, '0');
insert into reserve values('0101',to_date('2017-04-21 18:00:00', 'yyyy-mm-dd hh24:mi:ss'),'a','30000','1', '3', seq_reserveNumber.nextval, '0');

insert into reserve values('0101',to_date('2017-04-19 18:00:00', 'yyyy-mm-dd hh24:mi:ss'),'a','30000','5', '3', seq_reserveNumber.nextval, '1');
insert into reserve values('0101',to_date('2017-04-19 18:00:00', 'yyyy-mm-dd hh24:mi:ss'),'a','30000','4', '3', seq_reserveNumber.nextval, '0');
insert into reserve values('0101',to_date('2017-04-19 18:00:00', 'yyyy-mm-dd hh24:mi:ss'),'a','30000','3', '3', seq_reserveNumber.nextval, '0');
insert into reserve values('0101',to_date('2017-04-19 18:00:00', 'yyyy-mm-dd hh24:mi:ss'),'a','30000','2', '3', seq_reserveNumber.nextval, '0');
insert into reserve values('0101',to_date('2017-04-19 18:00:00', 'yyyy-mm-dd hh24:mi:ss'),'a','30000','1', '3', seq_reserveNumber.nextval, '0');

commit;



--5. 리뷰 테이블

drop table review cascade constraint;

create table review(
  restaurant_number varchar2(20)
  ,write_date date default sysdate
  ,reserve_date date
  ,userid varchar2(20)
  ,comments varchar2(300)
  ,ranking number
  ,Review_filePath varchar2(300)
  ,reserveNumber number
  ,constraint fk_tbl_review_r_number foreign key(restaurant_number)
  references restaurant(restaurant_number) on delete cascade
  ,constraint fk_tbl_review_userid foreign key(userid)
  references customer(userid) on delete cascade
);

-- 4. 레스토랑 파일 업로드 RESTAURANTUPLOAD
drop table RESTAURANTUPLOAD cascade constraint;

create table restaurantupload(
restaurant_number varchar2(20)
,M_path varchar2(200)
,D_path1 varchar2(200)
,Mn_path varchar2(200)
,constraint fk_tbl_restaurantupload foreign key(restaurant_number)
references restaurant(restaurant_number) on delete cascade
);
 
 
--파일업로드용 시퀀스
drop sequence ru_filenumber;
create sequence ru_FILENUMBER; 

----5. 휴일 Holidays

drop table holidays cascade constraint;

create table holidays(
RESTAURANT_NUMBER VARCHAR2(20)
,Holiday date 
,constraint FK_tbl_h_RESTAURANT_NUMBER foreign key(RESTAURANT_NUMBER)
references RESTAURANT(RESTAURANT_NUMBER) on delete cascade
);

--5.휴일 더미 데이터
insert into holidays values('0101','2017-4-26'); 
insert into holidays values('0202','2017-4-26');
insert into holidays values('0303','2017-4-26');


--6. 집코드     Zipcode

drop table zipcode cascade constraint;

create table zipcode(
zipcode varchar2(10)
,area1 varchar2(100)
,area2 varchar2(100)
,area3 varchar2(100)
,area4 varchar2(1000)
);


---- 7. 운영자          ADMINISTRATOR
drop table  ADMINISTRATOR;

create table  ADMINISTRATOR(
USERID VARCHAR(20) not null
, PASSWORD VARCHAR(20) not null
);

----------- 8. 리뷰 파일 저장  review_imagesave 

drop table  review_imagesave;

create table review_imagesave (
  originalFilename varchar2(100)
  ,filePath varchar2(300)
  ,fileSize number
  ,restaurant_number varchar2(20)
  ,userid varchar2(20)
  ,write_date date default sysdate
  ,reserveNumber number
  ,constraint fk_tbl_image_r_number foreign key(restaurant_number)
  references restaurant(restaurant_number) on delete cascade
);

--10.zipcode 추가는   zipcode 폴더 참조


